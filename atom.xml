<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>擼sirの避風港</title><link href="http://lusir.me/" rel="alternate"></link><link href="http://lusir.me/atom.xml" rel="self"></link><id>http://lusir.me/</id><updated>2014-03-08T20:40:00+08:00</updated><entry><title>在网页中嵌入 html5 音视频</title><link href="http://lusir.me/embed-html5-media.html" rel="alternate"></link><updated>2014-03-08T20:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-03-08:embed-html5-media.html</id><summary type="html">&lt;p&gt;前几天看见一篇使用 FFmpeg 的文章，就尝试了一下这款“转码瑞士军刀”。本文记录一下初次使用 FFmpeg 的过程，顺便把转码之后的音视频嵌进来看看结果。
&lt;/p&gt;
&lt;h3 id="4e63f356b53969a3458a2e612a726df6"&gt;安装 FFmpeg&lt;/h3&gt;
&lt;p&gt;首先是到&lt;a href="http://ffmpeg.zeranoe.com/builds/" title="Zeranoe FFmpeg"&gt;官网&lt;/a&gt;下载 Windows Build Version，解压后添加 ffmpeg.exe 的路径到 &lt;code&gt;环境变量&lt;/code&gt; 的 &lt;code&gt;path&lt;/code&gt; 中，打开 cmd，输入 &lt;code&gt;ffmpeg -version&lt;/code&gt; 查看是否安装成功。&lt;/p&gt;
&lt;h3 id="d2b3b5b0e8e7ae02b05511465192f574"&gt;转码音视频&lt;/h3&gt;
&lt;p&gt;将要转码的音视频放到 &lt;code&gt;C:\Users\×××&lt;/code&gt; 中，分别在 cmd 中输入以下命令（假设音频为 tao.mp3，视频为 man.mp4）：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ffmpeg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;tao&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt;

&lt;span class="n"&gt;ffmpeg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;tao&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;ogg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acodec&lt;/span&gt; &lt;span class="n"&gt;libvorbis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ogg&lt;/span&gt;

&lt;span class="n"&gt;ffmpeg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;man&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acodec&lt;/span&gt; &lt;span class="n"&gt;libvorbis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="mi"&gt;345&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="n"&gt;x360&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;webm&lt;/span&gt;

&lt;span class="n"&gt;ffmpeg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;man&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;strict&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;aac&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vcodec&lt;/span&gt; &lt;span class="n"&gt;libx264&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vprofile&lt;/span&gt; &lt;span class="n"&gt;high&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;preset&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;maxrate&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bufsize&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="n"&gt;x360&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="9e068158b573d915ef69529b11ef2f6d"&gt;将媒体文件嵌入网页&lt;/h3&gt;
&lt;p&gt;此处使用了 &lt;a href="http://html5media.info/" title="html5media"&gt;html5media.js&lt;/a&gt;，使用 &lt;audio&gt; 与 &lt;video&gt; 标签插入，如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;640&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;360&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;controls&lt;/span&gt; &lt;span class="n"&gt;preload&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;clip.mp4&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;clip.webm&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="158ce031b84d63c39e11ebcb03c83dfc"&gt;嵌入结果&lt;/h3&gt;
&lt;h4 id="c4f92557d7c49823e0f5d3bde398e44c"&gt;嵌入视频（右键选择播放）&lt;/h4&gt;
&lt;p&gt;&lt;video class="aligncenter" preload&gt;
    &lt;source src="http://dn-nero.qbox.me/man-in-black-clip.mp4"&gt;&lt;/source&gt;
    &lt;source src="http://dn-nero.qbox.me/man-in-black-clip.webm"&gt;&lt;/source&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h4 id="5c279a1704357d84f72d80a0c5e7768e"&gt;嵌入音频&lt;/h4&gt;
&lt;p&gt;&lt;audio class="aligncenter" controls preload autoplay&gt;
    &lt;source src="http://dn-nero.qbox.me/taoshengyijiu.mp3"&gt;&lt;/source&gt;
    &lt;source src="http://dn-nero.qbox.me/taoshengyijiu.ogg"&gt;&lt;/source&gt;
&lt;/audio&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
生前何必久睡，死后自会长眠&lt;/p&gt;
&lt;h3 id="2a302fa545ce4445b25970650930debd"&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zh.wikihow.com/%E5%9C%A8Windows%E4%B8%8A%E5%AE%89%E8%A3%85FFmpeg%E7%A8%8B%E5%BA%8F" title="如何在Windows上安装FFmpeg程序"&gt;如何在Windows上安装FFmpeg程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://paulrouget.com/e/converttohtml5video/" title="Converting to WebM, OGG/Theora and MP4"&gt;Converting to WebM, OGG/Theora and MP4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jalena.bcsytv.com/archives/1202" title="FFmpeg 批量转换HTML5视频"&gt;FFmpeg 批量转换HTML5视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.xiaket.org/2010/notes-on-ffmpeg.html" title="FFMPEG使用"&gt;FFMPEG使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.raphaelzhang.com/2013/05/some-usage-of-ffmpeg/" title="ffmpeg转码的几个小用法"&gt;ffmpeg转码的几个小用法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etianen/html5media/wiki/embedding-audio" title="Embedding audio"&gt;Embedding audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etianen/html5media/wiki/embedding-video" title="Embedding video"&gt;Embedding video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="html5"></category></entry><entry><title>使用七牛镜像存储</title><link href="http://lusir.me/start-using-qiniu.html" rel="alternate"></link><updated>2014-03-07T13:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-03-07:start-using-qiniu.html</id><summary type="html">&lt;p&gt;看到很多博主都正在使用七牛作为图床或整站的 CDN 加速，本着外行凑热闹的精神，我也学着使用了一把。七牛的加速节点响应速度确实是很快，至少目前是这样，我 ping 了一下，结果如下。
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://dn-nero.qbox.me/ping-qbox-me.png" title="ping-qbox-me" data-fancybox-group="gallery"&gt;
    &lt;img class="aligncenter" src="http://dn-nero.qbox.me/ping-qbox-me.png" alt="ping-qbox-me" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面记录一下七牛镜像存储的使用（本例为图床使用）：&lt;/p&gt;
&lt;p&gt;由于我没有备案的打算，所以使用的是七牛提供的三级域名。&lt;/p&gt;
&lt;p&gt;假设我想要镜像的源站为 &lt;code&gt;img.lusir.me&lt;/code&gt;。而且我已经建立了名为 pic 的七牛 bucket（bucket 意指“空间”，理解为“坑”我觉得更形象）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入&lt;a href="https://portal.qiniu.com/" title="七牛内容管理页面"&gt;七牛内容管理页面&lt;/a&gt;，设置一键加速网站，修改镜像源为 &lt;code&gt;img.lusir.me&lt;/code&gt;，底下的“镜像空间”默认是 pic（如果我只建立了一个“坑”）。这时点击“确定加速”即可将 &lt;code&gt;img.lusir.me&lt;/code&gt; 与 &lt;code&gt;pic.u.qiniudn.com&lt;/code&gt; 进行关联。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改文章里面的图片地址，搜寻关键字 &lt;code&gt;img.lusir.me&lt;/code&gt; 并将其改为 &lt;code&gt;pic.u.qiniudn.com&lt;/code&gt;，保存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问一篇带图的文章，进入&lt;a href="https://portal.qiniu.com/" title="七牛内容管理页面"&gt;七牛内容管理页面&lt;/a&gt;的内容管理，此时文章里相应的图会被拉取到七牛的“坑”里面。也可以直接将所有的图通过&lt;a href="http://docs.qiniu.com/tools/v6/qrsbox.html" title="QRSBox同步工具"&gt;QRSBox&lt;/a&gt;上传到“坑”里面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此就完成整个迁移过程。此时 &lt;code&gt;img.lusir.me&lt;/code&gt; 这个源站就可以暂时废弃不用了，即以后可以直接将 &lt;code&gt;pic.u.qiniudn.com&lt;/code&gt; 作为图床。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;如果要保留源站的域名方式 &lt;code&gt;img.lusir.me&lt;/code&gt;，七牛也提供了方法，&lt;a href="http://kb.qiniu.com/how-to-use-image-storage-and-qrsync" title="镜像存储与qrsync数据同步的使用"&gt;点我查看&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="2a302fa545ce4445b25970650930debd"&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cjzsy.com/archives/1415" title="七牛云储存：从其他图床搬家到七牛的便捷方法"&gt;七牛云储存：从其他图床搬家到七牛的便捷方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="七牛"></category></entry><entry><title>使用 Feedly 阅读器</title><link href="http://lusir.me/start-using-feedly.html" rel="alternate"></link><updated>2014-03-07T10:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-03-07:start-using-feedly.html</id><summary type="html">&lt;p&gt;RSS 阅读器改变了我上网的习惯，让我习惯于将喜欢的站放到订阅里而不是浏览器书签里。Google Reader 是一款经典的应用，能够高效的获取订阅源的更新，而且丰富的扩展使得它与浏览器集成，使用方便。
&lt;/p&gt;
&lt;p&gt;Google Reader 走了之后尝试使用过 Feedly 与 Digg 两款免费的应用，直接通过 Google 账号就能导出 Google Reader 的订阅源，即所谓的无痛转移，当时由于 Feedly 经常抽疯，所以选择了 Digg 并一直使用着它。&lt;/p&gt;
&lt;p&gt;昨晚整理 RSS 订阅源的时候发现很多站都在更新，但 Digg 里却不能正常显示，我明白我应该更换别家的 RSS 订阅服务了。&lt;/p&gt;
&lt;p&gt;看到&lt;a href="http://www.playpcesor.com/2013/03/google-reader-feedly.html" title="Google Reader 將停止服務，最佳替代方案就是 Feedly"&gt;電腦玩物&lt;/a&gt;的推荐文章后决定再次尝试 Feedly，将整理到一半的订阅源从 Digg 导出，用 Google 账号登入 Feedly，导入 OPML 源，将 Feedly 主题改成绿色，将 Feedly 加入“科学上网”列表。检查发现 RSS 源可以正常更新。遂果断抛弃 Digg，加入 Feedly 的行列。安装 Feedly 扩展，这样一来，Feedly 的使用方法仿佛使人回到了 Google Reader 的时代，除开搜索功能（2014.03.08更新：Feedly 提供搜索功能，不过貌似 Pro 账号才能获取全部搜索条目）。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://dn-nero.qbox.me/feedly-thumb.png" title="我的 Feedly" &gt;
    &lt;img src="http://dn-nero.qbox.me/feedly-thumb.png" alt="我的 Feedly" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="2a302fa545ce4445b25970650930debd"&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://capbone.com/rss-readers/" title="RSS 阅读器一览"&gt;RSS 阅读器一览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://capbone.com/mr-reader/" title="Mr. Reader：我心目中最好的 RSS 阅读器"&gt;Mr. Reader：我心目中最好的 RSS 阅读器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="feedly"></category></entry><entry><title>关联博客与 Google Profile</title><link href="http://lusir.me/add-google-profile.html" rel="alternate"></link><updated>2014-03-05T01:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-03-05:add-google-profile.html</id><summary type="html">&lt;p&gt;使用 Google 搜索时经常会看到一些搜索到的文章标题下面有个头像，头像旁边写着 &lt;code&gt;By：×××&lt;/code&gt;，这时，只要标题下面的摘要中含有我们搜索的关键字，我想大多数人应该都会忍不住想点进去看看了。为了实现这一功能，我也找了好几篇文章学着操作，坐等 Google 重新爬取。
&lt;/p&gt;
&lt;p&gt;其实操作不难，&lt;a href="https://support.google.com/webmasters/answer/1408986?hl=zh-Hans" title="搜索结果中的作者信息"&gt;Google&lt;/a&gt; 已经给了我们方法，我们只需照着操作就行。我选择了&lt;a href="http://www.cmhello.com/" title="胡倡萌"&gt;胡倡萌&lt;/a&gt;使用的方法，即 Google 给的方法二。&lt;/p&gt;
&lt;h3 id="27b152135057a08d88a562eac4a8dbc0"&gt;在网页上创建指向 Google+ 个人资料的链接&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://plus.google.com/118433343253566330284?rel=author&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Google+&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;链接必须包含 &lt;code&gt;?rel=author&lt;/code&gt; 参数。如果缺少该参数，就无法与 Google+ 个人资料关联。&lt;/p&gt;
&lt;h3 id="fb4227b0fa5f176f42ab7de2f2dcc612"&gt;编辑 Google+ 个人资料以实现双向链接&lt;/h3&gt;
&lt;p&gt;修改 &lt;a href="http://plus.google.com/me/about/edit/co" title="编辑撰稿者"&gt;Google+ 个人资料&lt;/a&gt;的撰稿者部分。在显示的对话框中点击&lt;code&gt;添加自定义链接&lt;/code&gt;，然后输入网站网址，保存即可。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;网上很多童鞋说还应该添加指向 Google+ ID 的 rel="publisher" 及 rel="me"，Glenn Gabe &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 及 Google 给出了反驳，单博主博客是不需要 rel="me" 链接的。&lt;/p&gt;
&lt;h3 id="85db889726449cb9c5fd0865a08fb7a9"&gt;使用 Google+ 个性网址&lt;/h3&gt;
&lt;p&gt;标题的意思很明显，就是给个个性短连接，将 Google+ 个人资料的链接地址由 &lt;code&gt;https://plus.google.com/118433343253566330284&lt;/code&gt; 生成一个自定义的 &lt;code&gt;https://www.google.com/+NeroZheng&lt;/code&gt;,使得链接更美观、与众不同、方便记忆。&lt;a href="https://support.google.com/plus/answer/2676340?hl=zh-Hans" title="Google+个性网址使用入门"&gt; Google &lt;/a&gt;给出了详细的说明，在此我只把 Google 的要求列一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;十个或更多个关注者&lt;/li&gt;
&lt;li&gt;帐户已创建至少30天&lt;/li&gt;
&lt;li&gt;有个人资料照片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就是这么简单，不过由于我只有 4 个关注者，所以我拉了几个不常上网的朋友给注册了 Google 账号才获得了资格，而且为了得到 +NeroZheng，我还把 Google+ 个人资料的名字改成了 Nero Zhen，改完才发现 Google 账号名 2 年只能改 3 次，世界真不美好。&lt;br&gt;&lt;/p&gt;
&lt;h3 id="2a302fa545ce4445b25970650930debd"&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cmhello.com/add-author-information.html" title="在Google搜索结果中显示你网站的作者信息"&gt;在Google搜索结果中显示你网站的作者信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fatesinger.com/1252.html" title="把你的博客和 Google+ profile 连起来"&gt;把你的博客和 Google+ profile 连起来&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fatesinger.com/968.html" title="Google Sitelink &amp;amp; Google+ Author Profile"&gt;Google Sitelink &amp;amp; Google+ Author Profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="http://www.hmtweb.com/imd/?p=1587" title="避免 rel=author 与 rel=publisher 产生冲突"&gt;How To Troubleshoot Authorship Markup When rel=author and rel=publisher Clash&lt;/a&gt;&amp;#160;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="google"></category></entry><entry><title>整合 Google 自定义搜索到 Pelican</title><link href="http://lusir.me/google-cse-for-pelican.html" rel="alternate"></link><updated>2014-03-04T21:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-03-04:google-cse-for-pelican.html</id><summary type="html">&lt;p&gt;总感觉好像我搭建 Blog 的目的跟别人不太一样，小伙伴们都在正儿八经的写出一些有价值有意义的文章，我却在那折腾怎么实现这个功能，怎么实现那个功能。可问题是自己又不会整，只能到处搜寻答案然后慢慢试结果。好在人品不错，虽然浪费不少时间，但折腾出结果的满足感确实挺爽。本文记录一下将 Google 自定义搜索整合到 Pelican 的过程。
&lt;/p&gt;
&lt;p&gt;说是整合到 Pelican，其实只是通过 jinja2 的一些规则将 Google 自定义搜索代码插入到主题的“搜索页面.html”中。&lt;/p&gt;
&lt;h3 id="be5bf34c6756f3e3f7e20057e2c5c10b"&gt;第一步：注册并获取 Google 自定义搜索代码&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;先通过访问 http://www.google.com/cse/ 创建自定义搜索引擎。创建完毕后进入“外观”面板，选择“全宽”的布局模式。保存后进入“获取代码”,获得 Google 自定义搜索代码。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;cx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;012467883927724485227:eaoxbeaeyty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gcse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;gcse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;gcse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;gcse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;//www.google.com/cse/cse.js?cx=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;cx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gcse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})();&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;gcse&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;searchresults&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;only&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/gcse:searchresults-only&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="3a2e8e53c47ef1f31c3c65ceed0d2411"&gt;第二步：创建搜索结果页&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;为了让搜索结果在博客内部显示，我们需要在主题的 templates 中创建一个新的页面，用来显示搜索结果。新建一个文件，命名为 search.html。我是直接复制 page.html，重命名为 search.html 并相应修改文件中的 title 及 description，然后插入第一步中得到的 Google 自定义搜索代码到相应的位置。至此搜索结果页创建就完成了。&lt;/p&gt;
&lt;h3 id="1db2035cd12c3dd8d8e34366e93b222c"&gt;第三步：修改当前主题的搜索提交表单&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;这里算是最关键的一步啦，当用户点击你博客上任意页面的站内搜索按钮的时候，可以将用户引导到刚刚创建的搜索结果页上。我们需要在主题文件夹中找到搜索框所在的文件，每个主题都不同，一般是在 header.html 中，找到类似以下的代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;form method=&amp;quot;get&amp;quot; action=&amp;quot;/search.html&amp;quot; &amp;gt;
&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;s&amp;quot; class=&amp;quot;textfield&amp;quot; placeholder=&amp;quot;Press enter to search ...&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需要注意的地方：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;method="get"&lt;/li&gt;
&lt;li&gt;action="/search.html"    action 的地址为 search.html 在生成的站点中的相对地址，一般是在根目录下，即 /search.html。&lt;/li&gt;
&lt;li&gt;文本框 name="s" 不管主题搜索框的 name 等于什么，都将引号内的字母改成 q，即 name="q"。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="5aec29c358fa0dff64fe292979a341d1"&gt;第四步：使用 javascript 让搜索结果页的 title 中显示搜索关键字（可选）&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;由于静态页面不能从数据库获取输入的关键字，所以只能从搜索结果页的 URL 下手了，假设搜索结果页的 URL 为：http://lusir.me/search.html?q=solidworks。我们想得到参数 q 的值，则可以通过以下函数调用。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(^|&amp;amp;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;q&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;=([^&amp;amp;]*)(&amp;amp;|$)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;║&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;║&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;的搜索结果 - 擼sirの避風港&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面那段的具体意思我也不太清楚，大概就是使用正则式将 url 分为 3 部分，以 q 为分界点，我们需要的就是 q= 之后的那部分（即 context）。匹配成功之后利用 context 给 title 赋值，但是这样赋值之后的 title 不能正确显示中文字符，所以需要使用关键字 decodeURIComponent 来将 context 还原成中文字符。&lt;/p&gt;
&lt;h3 id="effe4bed8cea1f7d427c950a4d195981"&gt;第五步：调整 CSS&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;功能实现了之后就是美化了。按照自己的意愿调整CSS即可。  &lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;大功告成，此后就可以在主题原始的搜索框上使用 Google 自定义搜索了。&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;PS：研究这一功能的过程中参考了以下文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.wpjam.com/article/google-cse-for-wordpress/" title="无缝整合 Google 自定义搜索框到 WordPress"&gt;无缝整合 Google 自定义搜索框到 WordPress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ncku.edu.tw/~rcenter/book/html/JavaScript.html" title="簡易JavaScript語法結構"&gt;簡易JavaScript語法結構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://yige.org/p/374" title="JS获取url参数的函数_JavaScript"&gt;JS获取url参数的函数_JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.w3schools.com/jsref/jsref_encodeuricomponent.asp" title="JavaScript encodeURIComponent() Function"&gt;JavaScript encodeURIComponent() Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.w3cplus.com/jquery/attr-removeAttr" title="jQuery学习笔记——.attr()和.removeAttr()方法操作元素属性"&gt;jQuery学习笔记——.attr()和.removeAttr()方法操作元素属性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="pelican"></category><category term="cse"></category></entry><entry><title>Thunderbird + Markdown 写邮件</title><link href="http://lusir.me/markdown-emails.html" rel="alternate"></link><updated>2014-02-27T20:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-27:markdown-emails.html</id><summary type="html">&lt;p&gt;前几天记录了一下使用 Markdown 添加表格的方法（&lt;a href="http://lusir.me/markdown-add-tables.html" title="Markdown 添加表格"&gt;点我查看&lt;/a&gt;），耽搁好几天，今天记录一下使用 Thunderbird + Markdown 编辑邮件（通过 Thunderbird + Markdown Here 插件将 Markdown 文段转成格式清爽的邮件）的步骤。
&lt;/p&gt;
&lt;h3 id="90633085fd7eb1c9483c3ce43cbf7619"&gt;绿色版 Thunderbird&lt;/h3&gt;
&lt;p&gt;安装绿色版 Thunderbird（绿色版便携）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载安装 Thunderbird 至相应位置。&lt;/li&gt;
&lt;li&gt;新建文件夹用来存放配置文件（名称可以是中文）。&lt;/li&gt;
&lt;li&gt;将 thunderbird.exe 发送到桌面快捷方式，并在快捷方式的“目标”中添加 &lt;code&gt;-p&lt;/code&gt; 参数，如下图：
&lt;p&gt;&lt;a href="http://dn-nero.qbox.me/thunderbird-config1.jpg" title="添加 -p 参数" class="fancybox" data-fancybox-group="gallery"&gt;看图点我&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;双击快捷方式新建配置文件指向第一步新建的文件夹，如下图，然后去掉快捷方式的 &lt;code&gt;-p&lt;/code&gt; 参数即可正常使用。
&lt;p&gt;&lt;a href="http://dn-nero.qbox.me/thunderbird-config2.jpg" title="新建用户配置" class="fancybox" data-fancybox-group="gallery"&gt;看图点我&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="4f3d67d0b3a268ac8d99d670851c8b80"&gt;Markdown Here 插件&lt;/h3&gt;
&lt;p&gt;Markdown Here 插件这一步就不详述了，直接在“附加组件管理器”中搜索 Markdown Here 扩展，然后安装即可。安装成功后，在使用 Markdown 编辑完邮件后，右键点击 &lt;code&gt;Markdown Toggle&lt;/code&gt; 即可在书写页面和预览之间进行切换，从而编辑出样式清爽的邮件。同时，还可以通过编辑 Markdown Here 扩展的 CSS 来自定义邮件样式、配色等方案以达到自己的需求。&lt;/p&gt;
&lt;h3 id="5627d82f25e05d6225b4fb0f7f1d8c62"&gt;Thunderbird 扩展&lt;/h3&gt;
&lt;p&gt;提到了 Thunderbird，顺便列一下我现在使用的扩展。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Contact Tabs。（通过 Thunderbird 主窗口快速访问联系人目录）&lt;/li&gt;
&lt;li&gt;Markdown Here。（Write your email in Markdown, then make it pretty）&lt;/li&gt;
&lt;li&gt;MinimizeToTray。（最小化窗口到系统托盘）&lt;/li&gt;
&lt;li&gt;Quicktext。（添加快速文本）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Markdown 确实是比较方便，熟练运用可以提升不少效率，我还得努力……&lt;/p&gt;</summary><category term="markdown"></category><category term="thunderbird"></category></entry><entry><title>Markdown 添加表格</title><link href="http://lusir.me/markdown-add-tables.html" rel="alternate"></link><updated>2014-02-22T19:20:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-22:markdown-add-tables.html</id><summary type="html">&lt;p&gt;搭建了 Pelican 之后就在慢慢尝试学习使用 Markdown 记录一些东西（包括尝试使用 Markdown 编辑邮件）。本文记录一下使用 Markdown 添加表格的方法。
&lt;/p&gt;
&lt;h3 id="9ac4d85e35db087be217f6a8bc1a5d9d"&gt;简单的表格&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;你好 | Markdown | 表格 | 这是表头
---- | -------- | ---- | --------
abc  |  123   |  ABC  |  cool
111  |  222   |  333  |  444
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="7e8b2fa2745e37dfe2e609baf04e319f"&gt;效果&lt;/h3&gt;
&lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;你好&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;th&gt;表格&lt;/th&gt;
&lt;th&gt;这是表头&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abc&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;ABC&lt;/td&gt;
&lt;td&gt;cool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;222&lt;/td&gt;
&lt;td&gt;333&lt;/td&gt;
&lt;td&gt;444&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="b3d606cf1cfea15e42ec0b7784a414af"&gt;对齐的表格&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;|Tables     |Are             |Cool |
| ----------- |:-------------:| -----:|
| col 3 is    | right-aligned | $1600 |
| col 2 is    | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="7e8b2fa2745e37dfe2e609baf04e319f_1"&gt;效果&lt;/h3&gt;
&lt;table class="table table-bordered table-striped table-condensed table-hover"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th align="center"&gt;Are&lt;/th&gt;
&lt;th align="right"&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td align="center"&gt;are neat&lt;/td&gt;
&lt;td align="right"&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="35808e79fa5f367a06c83a78b857519c"&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" title="Markdown 语法"&gt;Markdown Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Markdown"></category></entry><entry><title>关于 Unicode BOM</title><link href="http://lusir.me/about-unicode-bom.html" rel="alternate"></link><updated>2014-02-22T17:00:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-22:about-unicode-bom.html</id><summary type="html">&lt;p&gt;昨晚意识到侧边栏跟 Ma Wenbao 的不一样，好像是我这边的发生了错位。仔细比较一番，发现主题文件里面的东西居然是一样的。尝试添加 &lt;code&gt;margin:0; padding:0&lt;/code&gt; 也无效，只好作罢睡觉。
&lt;/p&gt;
&lt;p&gt;想到昨天用 Firefox 自带的元素查看器找到的一块空白区域，觉得应该就是它在作祟了。启用 Firebug，选中空白区域右键“编辑 html”，&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 前多了一个 &lt;code&gt;&amp;amp;#65279;&lt;/code&gt;，网上一搜，原来是 UTF-8 BOM 符（Byte-Order Mark，字节顺序标记）&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;想起之前编辑文件的时候还特意将 ANSI 转成了 UTF-8 格式，原来该格式会默认给添加上 BOM，而 UTF-8 无 BOM 格式则不会添加这个 BOM，引发这个问题的原因就是模板文件使用的是 UTF-8 编码格式，而这个 BOM 符被浏览器渲染成了一行空白，从而导致页面错位。于是将文档格式转成 ANSI，问题解决（保存成 UTF-8 无 BOM 格式同样可行）。&lt;/p&gt;
&lt;h3 id="25f9c7fa3b50aebe5125112ac1187777"&gt;总结&lt;/h3&gt;
&lt;p&gt;由于 BOM 是针对于 UTF-16 和 UTF-32 的，对于使用 UTF-8 编码格式的文件不需要 BOM ，所以在保存 UTF-8 文件时最好选择无 BOM 的编码。&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Wikipedia：&lt;a href="http://en.wikipedia.org/wiki/Byte_order_mark" title="字节顺序标记"&gt;字节顺序标记&lt;/a&gt;.&amp;#160;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="BOM"></category></entry><entry><title>在 Google CDN 库获取失败时载入本地 jQuery 库</title><link href="http://lusir.me/jquery-src-switching.html" rel="alternate"></link><updated>2014-02-20T20:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-20:jquery-src-switching.html</id><summary type="html">&lt;p&gt;Niu-X2 主题默认加载本地 jQuery 库，放在 Github 上的本地 jQuery 库速度上是没有 Google CDN 提供的 jQuery 库快的，但 Google 在国内的状态又不是很稳定，所以还是要调用本地 jQuery 库才能确保不会出现加载 jQuery 库失败。
&lt;/p&gt;
&lt;h3 id="ec09647dcef4ae3525cffab24748838d"&gt;使用方法&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;使用以下代码可以在 Google CDN 库获取失败时载入本地 jQuery 库：
&lt;script src="https://gist.github.com/zyxnero/9150011.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id="1bbbb204023e59eba03319c7c5848fd1"&gt;注意事项&lt;/h3&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;许多网站都采用 Google CDN 提供的 jQuery 库，使用它可以得到出色的缓存效果。&lt;/li&gt;
&lt;li&gt;Google CDN 库的地址采用了协议相对路径，它可以很好的解决 &lt;code&gt;https&lt;/code&gt; 引起的一些问题，不过我还是选择了带 &lt;code&gt;http&lt;/code&gt; 的路径。&lt;/li&gt;
&lt;li&gt;把 jQuery 代码统统放到页面底部可以提高载入速度。&lt;/li&gt;
&lt;li&gt;使用 Html5 重构的页面可省略掉 &lt;code&gt;type="text/javascript"&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;别忘了在本地路径下存放相应的 jQuery 文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="3a0e011b5cafb9554b1f59cfecb632c3"&gt;国内其它 jQuery CDN 源&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;由于 Google 不稳定，所以国内的一些 jQuery CDN 源也是不错的选择，以下几个源经验证均可访问。
&lt;pre&gt;
迅雷  http://vod.xunlei.com/library/jquery-1.7.2.min.js
淘宝  http://a.tbcdn.cn/libs/jquery/1.7.1/jquery.js
微软  http://ajax.microsoft.com/ajax/jQuery/jquery-1.8.2.min.js
新浪  http://lib.sinaapp.com/js/jquery/1.10.2/jquery-1.10.2.min.js
阿里  http://static.www.net.cn/js/jquery-1.7.1.min.js
百度  http://fe.bdimg.com/jq/jquery-1.7.1.min.js
腾讯  http://ossweb-img.qq.com/images/js/jquery/jquery-1.7.1.min.js
搜狐  http://js.sohu.com/library/jquery-1.7.1.min.js
&lt;/pre&gt;&lt;/p&gt;</summary><category term="jQuery"></category></entry><entry><title>自定义 Word 文档页码</title><link href="http://lusir.me/customize-page-number-of-docx.html" rel="alternate"></link><updated>2014-02-20T16:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-20:customize-page-number-of-docx.html</id><summary type="html">&lt;p&gt;使用 Word 添加页码时可以看到页码显示的格式为“当前页/总页数”，在取消“链接到前一条页眉”的状态下，“当前页”及“总页数”默认都是从第一页开始的（包含封面、目录），所以通常情况下我们需要采取添加“分节符”等操作以使页码从我们想要的地方开始及结束。
&lt;/p&gt;
&lt;p&gt;注：前提条件是要保证想要设置页码的区域与前后区域设置了“分节符”且“链接到前一条页眉”没有选中，可以在“页面布局”下的“分隔符”里插入“下一页”进行分节。&lt;/p&gt;
&lt;p&gt;假设一文档有 8 页，需要在第 2 页到第 5 页设置页码（1、2、3、4 共 4 页），第 6 页到第 8 页作为附件文档重新设置页码（1、2、3 共 3 页）。则我们需要先在第 1 页与第 5 页设置“分节符”。插入页码之后，取消“链接到前一条页眉”，此时“当前页”都正常显示。在“总页数”数值那里点击右键，“切换域代码” → 拷贝 &lt;code&gt;NUMPAGES&lt;/code&gt; （注意不要{}），然后包括{}一起删除，连按两次 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;F9&lt;/kbd&gt;，出现两组大括号，输入 &lt;code&gt;{={NUMPAGES}-4}&lt;/code&gt;，再次右键“切换域代码”即可。同理，附件的“总页数”改为 &lt;code&gt;{={NUMPAGES}-5}&lt;/code&gt;。&lt;/p&gt;</summary><category term="Word"></category></entry><entry><title>修改本地连接 DNS 地址</title><link href="http://lusir.me/modify-dns-address.html" rel="alternate"></link><updated>2014-02-08T19:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-08:modify-dns-address.html</id><summary type="html">&lt;p&gt;之前的电信劫持门轰动一时，打开的正常页面及非正常页面时不时会跳转到电信的导航页面或其它广告页面。最近发现打开 hao123 后会强制跳转一次，而且后面会多一个 &lt;code&gt;tn=97236842_hao_pg&lt;/code&gt; 的尾巴，看着很不舒服。于是在网上搜得以下 Opendns。
&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="a33458dd02372c0059d095c6ce6a25a5"&gt;OpenerDNS&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;42.120.21.30&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id="45bdd11fa20b3d010f71cffe56101a2a"&gt;V2EX DNS&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;
199.91.73.222     LA
178.79.131.110   London
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;还有 Google 提供的 &lt;code&gt;8.8.8.8&lt;/code&gt; 及 &lt;code&gt;8.8.4.4&lt;/code&gt; 也是不错的选择，修改之后貌似是清爽一些了……&lt;/p&gt;</summary><category term="DNS"></category></entry><entry><title>人人影视弹窗免疫</title><link href="http://lusir.me/removal-ads-of-yyets.html" rel="alternate"></link><updated>2014-02-07T19:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-07:removal-ads-of-yyets.html</id><summary type="html">&lt;p&gt;喜欢在人人影视下载片子，但它的广告确实令人烦恼。一般情况下Firefox 下的 Adblock Plus 插件能过滤大部分的广告，但最近的弹窗貌似没有挡住，ChinaList + EasyList  更新一遍也没有效果，看来只能自己手动添加规则了。
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;打开“过滤规则首选项 → 自定义过滤规则 → 广告屏蔽规则”，添加如下规则：
&lt;pre&gt;&lt;code&gt;||p.btyou.com&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</summary><category term="Adblock"></category></entry><entry><title>关闭 HTC 8x 按键震动及按键灯</title><link href="http://lusir.me/shutdown-8x-led-and-vibrator.html" rel="alternate"></link><updated>2014-02-06T21:20:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-02-06:shutdown-8x-led-and-vibrator.html</id><summary type="html">&lt;h3 id="06933067aafd48425d67bcb01bba5cb6"&gt;Update&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2014.02.07 按键灯关闭貌似是临时的，几个小时就恢复了&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;
WP 果然是没有 Android 开放，耗电速度也让我和我的小伙伴惊呆了，所以毅然决定关闭按键震动及按键灯让爪机更省电，方法记录如下。
         &lt;/p&gt;
&lt;h3 id="263c8d41f4119510cabaa91e22830469"&gt;关闭按键震动&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;手机拨号界面 → 输入##634# → Accept → Vibrator Test → Run → Off → 直接退出&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id="c0289bd19fcd4a8274891133cd805435"&gt;关闭按键灯&lt;/h3&gt;
&lt;p&gt;&lt;pre&gt;手机拨号界面 → 输入##634# → Accept → Led Test → Run → Key LED → 直接退出&lt;/pre&gt;       &lt;/p&gt;
&lt;p&gt;注：重启恢复&lt;/p&gt;</summary><category term="8x"></category></entry><entry><title>DNS.LA 设置 URL 转发</title><link href="http://lusir.me/url-forwarding.html" rel="alternate"></link><updated>2014-01-27T14:00:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-27:url-forwarding.html</id><summary type="html">&lt;p&gt;DNSPod 的 URL 转发貌似需要域名记录一个月之后才能使用，而 DNS.LA 可以直接使用。设置的时候要注意，需先在域名商那修改域名 NS 地址为 DNS.LA 的解析地址，然后再来设置 URL 转发的地址，不然会提示错误。
&lt;/p&gt;
&lt;pre&gt;v1s1.xundns.com
v1s2.xundns.com &lt;/pre&gt;</summary><category term="URL 转发"></category><category term="DNS.LA"></category></entry><entry><title>尝试使用 TortoiseGit</title><link href="http://lusir.me/try-to-use-tortoisegit.html" rel="alternate"></link><updated>2014-01-26T10:25:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-26:try-to-use-tortoisegit.html</id><summary type="html">&lt;p&gt;刚刚接触 git，每次上传目录都要敲代码，先 &lt;code&gt;git add&lt;/code&gt;，&lt;code&gt;git  commit&lt;/code&gt; ，然后又是 &lt;code&gt;git push&lt;/code&gt;，对于我这些东西还是太过艰难，于是装了个 TortoiseGit。有了这货，目录更新之后只用右键提交，方便不少，当然前提是 TortoiseGit 要设置正确。
&lt;/p&gt;
&lt;p&gt;下面记录2点以作备忘：&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;设置 git 地址时要使用 &lt;code&gt;git@github.com:×××/××.git&lt;/code&gt; ，而不要使用 https 开头的地址。&lt;/li&gt;
&lt;li&gt;让 TortoiseGit 记住某个 repo 的账号密码（明文记录）：进入 &lt;code&gt;“repo/.git/config”&lt;/code&gt; ，增加      &lt;br /&gt;
&lt;pre&gt;
[credential]
    helper = store
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="2481aa063d11ec75776c6d1a58569ef3"&gt;相关阅读&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zww.me/tortoisegit-msysgit-remember-userid-and-pw.z-turn"&gt;TortoiseGit + Msysgit 记住帐号密码的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="TortoiseGit"></category><category term=""></category></entry><entry><title>风电齿轮油的测试标准</title><link href="http://lusir.me/gear-oil-testing-standards.html" rel="alternate"></link><updated>2014-01-25T23:50:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-25:gear-oil-testing-standards.html</id><summary type="html">&lt;pre&gt;
ISO 3104/ASTM D-445：粘度 cSt（@40°C/100°C)
ISO 2909/ASTM D-2270：粘度指数
ISO 2592/ASTM D-92：闪点
ISO 3016/ASTM D-97：倾点
DIN 51757/ASTM D-4052：密度
ISO 6618：总酸值
ISO 2160：铜蚀测试
ISO 7120：钢蚀测试
ISO 6247：泡沫测试
DIN 51599/ASTM D1401：抗乳化性测试
ASTM D943：氧化稳定性测试
DIN 53521：密封件相容性测试
Flender GC-V425：弗兰德泡沫测试
FVA 54/1-IV：抗微点蚀测试
FZG A/16,6/90：FZG 负荷失效测试
ASTM D-417：四球抗磨测磨斑直径
DIN 51527/III：抗磨极压齿轮油标准
DIN 51517/III的FAG FE8：轴承测试
FVA 54/I-IV（90°C、60°C）：微点蚀测试
&lt;/pre&gt;</summary><category term="风电"></category><category term="齿轮油"></category><category term="标准"></category></entry><entry><title>Windows 环境变量备份</title><link href="http://lusir.me/backup-environment-variables.html" rel="alternate"></link><updated>2014-01-25T23:25:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-25:backup-environment-variables.html</id><summary type="html">&lt;p&gt;很多“绿色版”程序如 git、python、matlab 都需要设置环境变量，所以为了避免麻烦，重装系统前有必要将这些“绿色版”程序的注册表备份下来，其实操作很简单，在此记录一下。
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;分别打开 Regedit 展开以下树，选中 &lt;code&gt;Environment&lt;/code&gt; ，右键导出。
&lt;pre&gt;
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment
HKEY_CURRENT_USER\Environment
&lt;/pre&gt;&lt;/p&gt;</summary><category term="环境变量"></category><category term="备份"></category></entry><entry><title>搬至 Github</title><link href="http://lusir.me/move-to-github.html" rel="alternate"></link><updated>2014-01-25T15:25:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-25:move-to-github.html</id><summary type="html">&lt;p&gt;对比 github 与 gitcafe 之后，发现 gitcafe 的存储空间较 github 大，而且服务器在国内，连接速度更快，遂果断将静态目录放至 gitcafe。不过前几天偶然发现 gitcafe 的 gitcafe page 好像不能自定义 404 页，目录下的 404.html 会被 gitcafe 默认的 404 页拦截，强迫症驱使下又回到了 github。
&lt;/p&gt;</summary><category term="404"></category><category term="github"></category></entry><entry><title>Pelican + Niux2 使用记录</title><link href="http://lusir.me/static-blog.html" rel="alternate"></link><updated>2014-01-19T19:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2014-01-19:static-blog.html</id><summary type="html">&lt;h3 id="06933067aafd48425d67bcb01bba5cb6"&gt;Update&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2014.01.25 将静态目录由 gitcafe 转移至 github，搜索栏高度改回 Niux2 主题默认。&lt;/li&gt;
&lt;li&gt;2014.02.11 添加 html5media.min.js 至主题 base.html 中。&lt;/li&gt;
&lt;li&gt;2014.02.17 给 index、article、page及 404 页面添加 meta。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;
果然还是需要一个可以宣泄情感垃圾的地方。域名被恶意泛解析之后就没管了，闲置大半年。最近看网上教程学着搭了个静态博客，接触到了 git、python、pelican 等名词，很新鲜。于是又动了记录一些生活琐事的念头。
&lt;/p&gt;
&lt;p&gt;现在使用的是 &lt;a href="http://blog.atime.me/" title="Mawenbao"&gt;Mawenbao&lt;/a&gt; 的 Niu-X2 主题，很好看，很喜欢，希望以后能更加自适应。记录一下启用主题之后的微小修改：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;改主题下所有 css 文件中 underline 为 none；&lt;/li&gt;
&lt;li&gt;修改 footer；&lt;/li&gt;
&lt;li&gt;强制显示浏览器侧边栏（niu2.css）； &lt;br /&gt;
&lt;pre&gt;&lt;code&gt;body, html {min-height:101%;}&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;文章侧边栏增加 Author，显示 fa-bug 图标；&lt;/li&gt;
&lt;li&gt;&lt;s&gt;修改搜索栏高度（Chrome 跟 Firefox 下显示高度不一样）。&lt;/s&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Windows 下使用 python 貌似还是有些问题，路径的写法跟网上找到的不一样，导致 extra 目录下的文件是不能拷到根目录。&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>使用 Google CDN</title><link href="http://lusir.me/gcdn.html" rel="alternate"></link><updated>2013-06-27T14:40:00+08:00</updated><author><name>Nero Zheng</name></author><id>tag:lusir.me,2013-06-27:gcdn.html</id><summary type="html">&lt;h3 id="06933067aafd48425d67bcb01bba5cb6"&gt;Update&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;该方法已失效（需申请）。&lt;a href="https://developers.google.com/speed/pagespeed/service"&gt;申请地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google PageSpeed Service 是 Google 提供的一项免费 CDN 加速服务，Page Speed Service 会从网站的服务器抓取内容，重写网页，再通过Google的服务器呈现给用户浏览，利用谷歌强大的服务器处理能力与反应速度，提升网页的加载速度。
&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="5ed93013be894ffe5ac89f7707b0b58f"&gt;Google PSS 官网&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首页：https://developers.google.com/speed/pagespeed/service&lt;/li&gt;
&lt;li&gt;管理：https://code.google.com/apis/console/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="de5ab0f9882d130f20c48b43f9a61ae0"&gt;Google PageSpeed Service 免费 CDN 开通&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;进入网站后，点击“Sign Up Now”按钮。&lt;/li&gt;
&lt;li&gt;填入你的邮箱，还有你的网站地址。同时下方还有问你的网站有没有正在使用 Google 的产品，最后是点击提交。大概2个小时以内，Google PageSpeed Service 就会给你答复了。（我人品不好，等了2天）&lt;/li&gt;
&lt;li&gt;获得 Google PageSpeed Service 使用权后，会收到邮件。&lt;/li&gt;
&lt;li&gt;点击邮件的链接地址，跳转到Google PageSpeed Service页面，同意使用协议。然后是添加你想要CDN加速的网站域名，最多50个。假如域名还没有验证拥有权，会提示你先验证域名。
点击 “Claim Ownership”，这里会提供多种验证方式，最快的就是上传一个 html 文件。验证通过后，就能看到域名添加成功了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="c324d27e10efe49b49eeeff86db84ecc"&gt;使用 Google PageSpeed Service 加速&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;给要加速的域名添加 CNAME 记录，记录值是 &lt;code&gt;pagespeed.googlehosted.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;进入域名的 DNS 管理处，将带有主机记录的域名添加 CNAME 记录，目前不支持裸域名即不带 www 这样的CDN加速。&lt;/li&gt;
&lt;li&gt;等域名解析生效后，就能在 Google PageSpeed Service 看到 CDN 加速已成功运行。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Google CDN"></category></entry></feed>